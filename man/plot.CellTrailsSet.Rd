% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{plot.CellTrailsSet}
\alias{plot.CellTrailsSet}
\title{Visualize a CellTrailsSet object}
\usage{
\method{plot}{CellTrailsSet}(x, type, feature_name = NULL,
  pheno_type = NULL, viz = NULL, perplexity = 30, seed = 1101,
  component = NULL, point_size = 3, label_offset = 2, trail_name = NULL,
  map_type = c("full", "se", "single"), ...)
}
\arguments{
\item{x}{A \code{\link[CellTrails]{CellTrailsSet}} object}

\item{type}{character value; defines which type of data should be shown}

\item{feature_name}{character value; name of feature(s) (one or multiple of \code{\link{featureNames}})}

\item{pheno_type}{character value; name of phenotypical information (one of \code{\link{varLabels}})}

\item{viz}{an object of class \code{\link[ggplot2]{ggplot}}; can be used to avoid tSNE re-calculation}

\item{perplexity}{numeric value; perplexity parameter of tSNE (default: 30)}

\item{seed}{integer value; starting number for random number generator (default: 1101)}

\item{component}{integer value; component of trajectory graph that should be shown}

\item{point_size}{numeric value; size of shown points or pie charts (default: 3)}

\item{label_offset}{numeric value; offset of point label (default: 2)}

\item{trail_name}{character value; name of trail (one of \code{\link{trailNames}})}

\item{map_type}{character value; type of map that should be shown (default: "full")}

\item{...}{Additional arguments; not normally accessed by user directly}
}
\value{
A \code{\link[ggplot2]{ggplot}} object
}
\description{
Visualizes the data contained in a \code{\link[CellTrails]{CellTrailsSet}} object
}
\details{
The available usage options:
\itemize{
  \item{\code{plot(ctset, type="stateSize")}}
  \item{\code{plot(ctset, type="stateExpression", feature_name)}}
  \item{\code{plot(ctset, type="latentSpace", feature_name, pheno_type, viz, perplexity=30, seed=1101)}}
  \item{\code{plot(ctset, type="stateTrajectoryGraph", feature_name, pheno_type, component, point_size=3, label_offset=2, seed=1101)}}
  \item{\code{plot(ctset, type="trajectoryFit")}}
  \item{\code{plot(ctset, type="map", feature_name, pheno_type, map_type=c("full", "se", "single"))}}
  \item{\code{plot(ctset, type="trailblazing")}}
  \item{\code{plot(ctset, type="trail", trail_name)}}
  \item{\code{plot(ctset, type="dynamic", feature_name, trail_name)}}
  }

The available visualization options for parameter \code{type}:
\describe{
  \item{\code{stateSize}}{Barplot showing the absolute number of samples per state.}
  \item{\code{stateExpression}}{Violin plots showing the expression distribution of a
  feature per state. Each point displays the feature’s expression value in a single sample.
  The feature is defined by \code{feature_name}.}
  \item{\code{latentSpace}}{Shows the computed manifold in two dimensions using t-distributed
  stochastic neighbor embedding (tSNE; van der Maaten and Hinton 2008). Each point in this plot
  represents a sample. Points can be colorized according to feature expression or experimental
  metadata. The points' coloration can be defined via the attributes \code{feature_name} or
  \code{pheno_type}, respectively. A previously computed visualization can be
  reused to avoid recalculation of the tSNE via the parameter \code{viz}. The parameters
  \code{seed} and \code{perplexity} are used for the tSNE calculation.}
  \item{\code{stateTrajectoryGraph}}{Shows a single tree component of the computed trajectory graph.
  Each point in this plot represents a state and can be colorized according to feature
  expression (mean expression per state) or experimental metadata (arithmetic mean or
  percentage distribution of categorial values). The component is defined by parameter
  \code{component}. If the trajectory graph contains only a single component, then this
  parameter can be left undefined. The points' coloration can be defined via the
  attributes \code{feature_name} or \code{pheno_type}. Missing sample lables are recovered using
  nearest neighbor learning.}
  \item{\code{trajectoryFit}}{Two-dimensional visualization of the trajectory graph fit.
  Illustrates the samples’ geodesic distance from the endpoints of the longest path in the
  trajectory graph (= pseudotime). The perpendicular dispersion is proportional to the distance
  of a sample from the predicted trajectory (black line) in the latent space (= the residuals of
  the trajectory fit).}
  \item{\code{map}}{Two-dimensional visualization of the trajectory. The red line represents
  the trajectory and individual points denote samples. This plot type can either show the
  topography of a given feature’s expression landscape or colorizes
  individual samples by a metadata label. The feature is selected with parameter \code{feature_name},
  the metadata label with \code{pheno_type}, respectively. To show feature expression, a surface is
  fitted using isotropic (i.e. same parameters for both map dimensions)
  thin-plate spline smoothing in \code{\link{gam}}. It gives an overview of expression dynamics
  along all branches of the trajectory. The parameter \code{map_type} defines if either the full
  fitted expression surface should be shown (\code{map_type="full"}) or the standard error
  of the surface prediction (\code{map_type="se"}), or the expression values of single samples
  only (\code{map_type="single"}).}
  \item{\code{trailblazing}}{Visualizes landmarks, namely
  branch (B), end points (H), and user-defined nodes (U) on the trajectory map. This plot is helpful
  to identify and extract individual trails located between two landmarks.}
  \item{\code{trail}}{Highlights an individual trail (as selected via the parameter
  \code{trail_name}) on the trajectory map.}
  \item{\code{dynamic}}{Shows the expression of a feature as a function of pseudotime along a
  given trail. Feature name(s) are defined by parameter \code{feature_name}, the trail is defined by
  parameter \code{trail_name}. Points represent single samples colorized by state and the line is the
  fitted dynamic. If multiple features are selected, then only their fitted dynamics are shown.
  The dynamic is fitted using a \code{\link{gam}} with a single
  smoothing term with four basis dimension and prior weights as defined in function
  \code{\link{fitDynamic}}.}
}
}
\examples{
# Generate example data
dat <- exDat()

# Create container
ctset <- as.CellTrailsSet(dat)

# Embed samples
ctset <- embedSamples(ctset)

# Find spectrum
spectr <- findSpectrum(ctset, frac=25)

# Reduce dimensionality
ctset <- reduceDimensions(ctset, spectr)

# Find states
ctset <- findStates(ctset, max_pval=1e-3, min_feat=4)

# Connect states
ctset <- connectStates(ctset, l=20)

# Select trajectory
ctset <- selectTrajectory(ctset, component=1)

# Align samples to trajectory
ctset <- fitTrajectory(ctset)

# For illustration purposes a layout for each example dataset
# is contained in this package.
# The function trajectoryLayout allows to set a trajectory layout
# to the object; the parameter adjust='TRUE' adjusts the layout
# according to the computed pseudotime
trajectoryLayout(ctset, adjust=TRUE) <- trajLayouts$example

# Define trail
ctset <- addTrail(ctset, from="H1", to="H3", name="Tr1") # Define trail
ctset <- addTrail(ctset, from="H1", to="H4", name="Tr2") # Define trail

# Plot state sizes
plot(ctset, type="stateSize")

# Plot gene expression per state
plot(ctset, type="stateExpression", feature_name="feature_1")

# Plot manifold in 2D
ggp <- plot(ctset, type="latentSpace", feature_name="feature_1") #gene expression
ggp
plot(ctset, type="latentSpace", pheno_type="age", viz=ggp) #metadata

# Plot maximum interface tree
plot(ctset, type="stateTrajectoryGraph", feature_name="feature_1") #gene expression
plot(ctset, type="stateTrajectoryGraph", pheno_type="age", point_size=2) #metadata

# Plot trajectory fit residuals
plot(ctset, type="trajectoryFit")

# Plot CellTrails maps
plot(ctset, type="map", feature_name="feature_10") #gene expression
plot(ctset, type="map", feature_name="feature_10", map_type="se") #standard error
plot(ctset, type="map", feature_name="feature_10", map_type="single") #gene expression
plot(ctset, type="map", pheno_type="age") #metadata

# Plot landmarks on map
plot(ctset, type="trailblazing")

# Highlight individual trails on map
plot(ctset, type="trail", trail_name="Tr1")

# Plot expression dynamics
plot(ctset, type="dynamic", feature_name="feature_3", trail_name="Tr1")
plot(ctset, type="dynamic", feature_name=c("feature_1", "feature_10"), trail_name="Tr2")
}
\references{
van der Maaten, L.J.P. & Hinton, G.E., 2008. Visualizing High-Dimensional
Data Using t-SNE. Journal of Machine Learning Research, 9, pp.2579-2605.
}
\seealso{
\code{\link[ggplot2]{ggplot2-package}}
}
\author{
Daniel C. Ellwanger
}
